{"ast":null,"code":"'use client';\n\nimport PropTypes from 'prop-types';\nimport exactProp from '@mui/utils/exactProp';\nimport withWidth, { isWidthDown, isWidthUp } from \"./withWidth.js\";\nimport useTheme from \"../styles/useTheme.js\";\n/**\n * @ignore - internal component.\n */\n\nfunction HiddenJs(props) {\n  const {\n    children,\n    only,\n    width\n  } = props;\n  const theme = useTheme();\n  let visible = true; // `only` check is faster to get out sooner if used.\n\n  if (only) {\n    if (Array.isArray(only)) {\n      for (let i = 0; i < only.length; i += 1) {\n        const breakpoint = only[i];\n\n        if (width === breakpoint) {\n          visible = false;\n          break;\n        }\n      }\n    } else if (only && width === only) {\n      visible = false;\n    }\n  } // Allow `only` to be combined with other props. If already hidden, no need to check others.\n\n\n  if (visible) {\n    // determine visibility based on the smallest size up\n    for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {\n      const breakpoint = theme.breakpoints.keys[i];\n      const breakpointUp = props[`${breakpoint}Up`];\n      const breakpointDown = props[`${breakpoint}Down`];\n\n      if (breakpointUp && isWidthUp(breakpoint, width) || breakpointDown && isWidthDown(breakpoint, width)) {\n        visible = false;\n        break;\n      }\n    }\n  }\n\n  if (!visible) {\n    return null;\n  }\n\n  return children;\n}\n\nHiddenJs.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  lgDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  lgUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  mdDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  mdUp: PropTypes.bool,\n\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  smDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  smUp: PropTypes.bool,\n\n  /**\n   * @ignore\n   * width prop provided by withWidth decorator.\n   */\n  width: PropTypes.string.isRequired,\n\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xlDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xlUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xsDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xsUp: PropTypes.bool\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  HiddenJs.propTypes = exactProp(HiddenJs.propTypes);\n}\n\nexport default withWidth()(HiddenJs);","map":{"version":3,"names":["PropTypes","exactProp","withWidth","isWidthDown","isWidthUp","useTheme","HiddenJs","props","children","only","width","theme","visible","Array","isArray","i","length","breakpoint","breakpoints","keys","breakpointUp","breakpointDown","propTypes","node","lgDown","bool","lgUp","mdDown","mdUp","oneOfType","oneOf","arrayOf","smDown","smUp","string","isRequired","xlDown","xlUp","xsDown","xsUp","process","env","NODE_ENV"],"sources":["/Users/prashanthireddy/Desktop/portfolio/personal-portfolio/node_modules/@mui/material/Hidden/HiddenJs.js"],"sourcesContent":["'use client';\n\nimport PropTypes from 'prop-types';\nimport exactProp from '@mui/utils/exactProp';\nimport withWidth, { isWidthDown, isWidthUp } from \"./withWidth.js\";\nimport useTheme from \"../styles/useTheme.js\";\n\n/**\n * @ignore - internal component.\n */\nfunction HiddenJs(props) {\n  const {\n    children,\n    only,\n    width\n  } = props;\n  const theme = useTheme();\n  let visible = true;\n\n  // `only` check is faster to get out sooner if used.\n  if (only) {\n    if (Array.isArray(only)) {\n      for (let i = 0; i < only.length; i += 1) {\n        const breakpoint = only[i];\n        if (width === breakpoint) {\n          visible = false;\n          break;\n        }\n      }\n    } else if (only && width === only) {\n      visible = false;\n    }\n  }\n\n  // Allow `only` to be combined with other props. If already hidden, no need to check others.\n  if (visible) {\n    // determine visibility based on the smallest size up\n    for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {\n      const breakpoint = theme.breakpoints.keys[i];\n      const breakpointUp = props[`${breakpoint}Up`];\n      const breakpointDown = props[`${breakpoint}Down`];\n      if (breakpointUp && isWidthUp(breakpoint, width) || breakpointDown && isWidthDown(breakpoint, width)) {\n        visible = false;\n        break;\n      }\n    }\n  }\n  if (!visible) {\n    return null;\n  }\n  return children;\n}\nHiddenJs.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  lgDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  lgUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  mdDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  mdUp: PropTypes.bool,\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  smDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  smUp: PropTypes.bool,\n  /**\n   * @ignore\n   * width prop provided by withWidth decorator.\n   */\n  width: PropTypes.string.isRequired,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xlDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xlUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xsDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xsUp: PropTypes.bool\n};\nif (process.env.NODE_ENV !== 'production') {\n  HiddenJs.propTypes = exactProp(HiddenJs.propTypes);\n}\nexport default withWidth()(HiddenJs);"],"mappings":"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"},"metadata":{},"sourceType":"module"}