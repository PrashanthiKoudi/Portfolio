{"ast":null,"code":"/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0\n   ---\n   These rules are preventing the performance optimizations below.\n */\n\n/**\n * Compose classes from multiple sources.\n *\n * @example\n * ```tsx\n * const slots = {\n *  root: ['root', 'primary'],\n *  label: ['label'],\n * };\n *\n * const getUtilityClass = (slot) => `MuiButton-${slot}`;\n *\n * const classes = {\n *   root: 'my-root-class',\n * };\n *\n * const output = composeClasses(slots, getUtilityClass, classes);\n * // {\n * //   root: 'MuiButton-root MuiButton-primary my-root-class',\n * //   label: 'MuiButton-label',\n * // }\n * ```\n *\n * @param slots a list of classes for each possible slot\n * @param getUtilityClass a function to resolve the class based on the slot name\n * @param classes the input classes from props\n * @returns the resolved classes for all slots\n */\nexport default function composeClasses(slots, getUtilityClass) {\n  let classes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  const output = {};\n\n  for (const slotName in slots) {\n    const slot = slots[slotName];\n    let buffer = '';\n    let start = true;\n\n    for (let i = 0; i < slot.length; i += 1) {\n      const value = slot[i];\n\n      if (value) {\n        buffer += (start === true ? '' : ' ') + getUtilityClass(value);\n        start = false;\n\n        if (classes && classes[value]) {\n          buffer += ' ' + classes[value];\n        }\n      }\n    }\n\n    output[slotName] = buffer;\n  }\n\n  return output;\n}","map":{"version":3,"names":["composeClasses","slots","getUtilityClass","classes","undefined","output","slotName","slot","buffer","start","i","length","value"],"sources":["/Users/prashanthireddy/Desktop/portfolio/personal-portfolio/node_modules/@mui/utils/esm/composeClasses/composeClasses.js"],"sourcesContent":["/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0\n   ---\n   These rules are preventing the performance optimizations below.\n */\n\n/**\n * Compose classes from multiple sources.\n *\n * @example\n * ```tsx\n * const slots = {\n *  root: ['root', 'primary'],\n *  label: ['label'],\n * };\n *\n * const getUtilityClass = (slot) => `MuiButton-${slot}`;\n *\n * const classes = {\n *   root: 'my-root-class',\n * };\n *\n * const output = composeClasses(slots, getUtilityClass, classes);\n * // {\n * //   root: 'MuiButton-root MuiButton-primary my-root-class',\n * //   label: 'MuiButton-label',\n * // }\n * ```\n *\n * @param slots a list of classes for each possible slot\n * @param getUtilityClass a function to resolve the class based on the slot name\n * @param classes the input classes from props\n * @returns the resolved classes for all slots\n */\nexport default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  for (const slotName in slots) {\n    const slot = slots[slotName];\n    let buffer = '';\n    let start = true;\n    for (let i = 0; i < slot.length; i += 1) {\n      const value = slot[i];\n      if (value) {\n        buffer += (start === true ? '' : ' ') + getUtilityClass(value);\n        start = false;\n        if (classes && classes[value]) {\n          buffer += ' ' + classes[value];\n        }\n      }\n    }\n    output[slotName] = buffer;\n  }\n  return output;\n}"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,eAA/B,EAAqE;EAAA,IAArBC,OAAqB,uEAAXC,SAAW;EAClF,MAAMC,MAAM,GAAG,EAAf;;EACA,KAAK,MAAMC,QAAX,IAAuBL,KAAvB,EAA8B;IAC5B,MAAMM,IAAI,GAAGN,KAAK,CAACK,QAAD,CAAlB;IACA,IAAIE,MAAM,GAAG,EAAb;IACA,IAAIC,KAAK,GAAG,IAAZ;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;MACvC,MAAME,KAAK,GAAGL,IAAI,CAACG,CAAD,CAAlB;;MACA,IAAIE,KAAJ,EAAW;QACTJ,MAAM,IAAI,CAACC,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsB,GAAvB,IAA8BP,eAAe,CAACU,KAAD,CAAvD;QACAH,KAAK,GAAG,KAAR;;QACA,IAAIN,OAAO,IAAIA,OAAO,CAACS,KAAD,CAAtB,EAA+B;UAC7BJ,MAAM,IAAI,MAAML,OAAO,CAACS,KAAD,CAAvB;QACD;MACF;IACF;;IACDP,MAAM,CAACC,QAAD,CAAN,GAAmBE,MAAnB;EACD;;EACD,OAAOH,MAAP;AACD"},"metadata":{},"sourceType":"module"}